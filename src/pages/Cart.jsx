/* eslint-disable jsx-a11y/accessible-emoji */
import React from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { Link } from 'react-router-dom';

import cartEmptyImage from '../assets/img/empty-cart.png';
import { CartItem, Button } from '../components';
import { clearCart, removeCartItem, plusCartItem, minusCartItem } from '../redux/actions/cart';
import {ReactComponent as CartImg} from '../assets/img/cart.svg'
import {ReactComponent as Trash} from '../assets/icons/trash.svg'
import {ReactComponent as ArrowLeft} from '../assets/icons/grey-arrow-left.svg'

function Cart() {
  const dispatch = useDispatch();
  const { totalPrice, totalCount, items } = useSelector(({ cart }) => cart);

  const addedPizzas = Object.keys(items).map((key) => {
    return items[key].items[0];
  });

  const onClearCart = () => {
    if (window.confirm('–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É?')) {
      dispatch(clearCart());
    }
  };

  const onRemoveItem = (id) => {
    if (window.confirm('–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å?')) {
      dispatch(removeCartItem(id));
    }
  };

  const onPlusItem = (id) => {
    dispatch(plusCartItem(id));
  };

  const onMinusItem = (id) => {
    dispatch(minusCartItem(id));
  };

  const onClickOrder = () => {
    console.log('–í–ê–® –ó–ê–ö–ê–ó', items);
  };

  return (
    <div className="container container--cart">
      {totalCount ? (
        <div className="cart">
          <div className="cart__top">
            <h2 className="content__title">
              <CartImg/>
              –ö–æ—Ä–∑–∏–Ω–∞
            </h2>
            <div className="cart__clear">
              
              <Trash/>

              <span onClick={onClearCart}>–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É</span>
            </div>
          </div>
          <div className="content__items">
            {addedPizzas.map((obj) => (
              <CartItem
                key={obj.id}
                {...obj}
                totalPrice={items[obj.id].totalPrice}
                totalCount={items[obj.id].items.length}
                onRemove={onRemoveItem}
                onMinus={onMinusItem}
                onPlus={onPlusItem}
              />
            ))}
          </div>
          <div className="cart__bottom">
            <div className="cart__bottom-details">
              <span>
                –í—Å–µ–≥–æ –ø–∏—Ü—Ü: <b>{totalCount} —à—Ç.</b>
              </span>
              <span>
                –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: <b>{totalPrice} ‚ÇΩ</b>
              </span>
            </div>
            <div className="cart__bottom-buttons">
              <a href="/" className="button button--outline button--add go-back-btn">
                <ArrowLeft/>
                <Link to="/">
                  <span>–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥</span>
                </Link>
              </a>
              <Button onClick={onClickOrder} className="pay-btn">
                <span>–û–ø–ª–∞—Ç–∏—Ç—å —Å–µ–π—á–∞—Å</span>
              </Button>
            </div>
          </div>
        </div>
      ) : (
        <div className="cart cart--empty">
          <h2>
            –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞—è <i>üòï</i>
          </h2>
          <p>
            –í–µ—Ä–æ—è—Ç–Ω–µ–π –≤—Å–µ–≥–æ, –≤—ã –Ω–µ –∑–∞–∫–∞–∑—ã–≤–∞–ª–∏ –µ—â—ë –ø–∏—Ü—Ü—É.
            <br />
            –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –ø–∏—Ü—Ü—É, –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
          </p>
          <img src={cartEmptyImage} alt="Empty cart" />
          <Link to="/" className="button button--black">
            <span>–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥</span>
          </Link>
        </div>
      )}
    </div>
  );
}

export default Cart;

